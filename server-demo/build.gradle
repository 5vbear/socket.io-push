buildscript {
    ext {
        springBootVersion = '1.2.6.RELEASE'
    }
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

task execute(type:JavaExec){
    main = "com.yy.httpproxy.emitter.Benchmark"
    classpath = sourceSets.main.runtimeClasspath
}




jar {
    baseName = 'demo-server'
    version = '1.0'
}

run {
    systemProperties = System.properties
}

test {
    testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        showStandardStreams = true

        // Or we use events method:
        // events 'standard_out', 'standard_error'

        // Or set property events:
        // events = ['standard_out', 'standard_error']

        // Instead of string values we can
        // use enum values:
        // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
        //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
    }
}

repositories {
    // NOTE: You should declare only repositories that you need here
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
}

dependencies {
    compile 'io.socket:socket.io-client:0.6.1'
    compile project(':java-server-push-sdk')
}
